# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  imageRepositoryCheckVatId: 'checkvatid'
  dockerRegistryServiceConnection: '9b3d1058-9df4-458a-a00c-62dbb707a569'
  imageRepositoryGetRates: 'getrates'
  containerRegistry: 'acrPaul.azurecr.io'
  dockerfilePathCheckVatId: '$(Build.SourcesDirectory)/src/CheckVatId/dockerfile'
  dockerfilePathGetRates: '$(Build.SourcesDirectory)/src/GetRates/dockerfile'
  tag: '$(Build.BuildNumber)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build
  jobs:  
  - job: BuildCheckVatId
    displayName: Build and push CheckVatId
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push CheckVatId to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryCheckVatId)
        dockerfile: $(dockerfilePathCheckVatId)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        Contents: '**/manifests/deployment.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - task: CopyFiles@2
      inputs:
        Contents: '**/helm-charts/*.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  - job: BuildGetrates
    displayName: Build and push Getrates
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push Getrates to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryGetRates)
        dockerfile: $(dockerfilePathGetRates)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        Contents: '**/manifests/deployment.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

